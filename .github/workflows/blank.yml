
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:

    
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: ["feature/*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      commit:
        description: 'Commit or Branch to tag and Deploy'
        required: true
        type: string
      type:
        type: choice
        description: Is this a release candidate (rc) or hotfix
        options:
        - rc
        - hotfix

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # #if: startsWith(${{ github.event.pull_request.head.ref }}, "feature/")
    # if: "(!contains(github.event.pull_request.labels.*.name, 'deploy-to-feature') ||  github.event.action == 'closed') && (startsWith(github.event.pull_request.head.ref, 'bug/') || startsWith(github.event.pull_request.head.ref, 'feature/'))"
    runs-on: ubuntu-latest
    outputs:
        new_version: ${{ steps.get-version.outputs.new_version }}
    permissions:
      pull-requests: write
      contents: 'write'
      id-token: 'write'
      actions: 'write'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run a one-line script
        id: get-version
        env:
          TYPE: ${{ inputs.type }}
          COMMIT: ${{ inputs.commit }}
          TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          export TZ=America/New_York
          DATE=$(date '+%Y.%m.%d')
          PREFIX=$(echo $TYPE/$DATE)
          LATEST_RELEASE=$(git ls-remote --tags --sort=committerdate | grep -o "$TYPE/.*" | tail -1)
          NEW_VERSION=$(python scripts/versioning.py -p $PREFIX -v $LATEST_RELEASE)
          echo $PREFIX
          echo $NEW_VERSION
          echo new_version=$NEW_VERSION >> $GITHUB_OUTPUT

      # - uses: KyoriPowered/action-regex-match@v3
      #   id: regex-match
      #   with:
      #     text: ${{ github.event.pull_request.title}}
      #     regex: 'CP(-| )[0-9]+'
        # This workflow contains a single job called "build"
  test:
      # The type of runner that the job will run on
      # #if: startsWith(${{ github.event.pull_request.head.ref }}, "feature/")
      # if: "(!contains(github.event.pull_request.labels.*.name, 'deploy-to-feature') ||  github.event.action == 'closed') && (startsWith(github.event.pull_request.head.ref, 'bug/') || startsWith(github.event.pull_request.head.ref, 'feature/'))"
    runs-on: ubuntu-latest
    needs: [build]
    environment: 'staging'
    if: ${{ !cancelled() }}
    permissions:
      pull-requests: write
      contents: 'write'
      id-token: 'write'
      actions: 'write'
    steps:
      - name: Create tag
        uses: actions/github-script@v6
        env:
          NEW_VERSION: ${{ needs.build.outputs.new_version }}
          SHA: ${{ inputs.commit }}
        with:
          github-token: ${{ secrets.MY_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.NEW_VERSION}`,
              sha: process.env.SHA
            })
