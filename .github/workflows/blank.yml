# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    types: [labeled, synchronize, unlabeled]
    
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: ["feature/*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # #if: startsWith(${{ github.event.pull_request.head.ref }}, "feature/")
    runs-on: ubuntu-latest
    # if: "!(startsWith(github.head_ref, 'feature/'))"
    
    permissions:
      pull-requests: write
      contents: 'read'
      id-token: 'write'
      actions: 'read'


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo ${{ github.head_ref }}
          echo ${{ github.event.action}}

      - uses: KyoriPowered/action-regex-match@v3
        id: regex-match
        with:
          text: ${{ github.event.pull_request.title}}
          regex: '[A-Za-z]{2,}-[0-9]+'

      - uses: actions/github-script@v7
        env:
          body: "Please add jira ticket number to PR title"
        with:
          debug: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Please add ticket"
            })
            process.exit(1)
        if: ${{ steps.regex-match.outputs.match == '' }}

      - name: 'Check Status of Ticket in Jira'
        id: check_jira
        run: |
          echo ${{ steps.regex-match.outputs.match }}
          STATUS=$(curl --user ${{ secrets.JIRA_TOKEN }} "https://certifyos.atlassian.net/rest/api/2/issue/${{ steps.regex-match.outputs.match }}?fields=status" | jq -r '.fields.status.name')
          if [[ $STATUS == "Done" ]]; then
            echo "status=fail" >> $GITHUB_OUTPUT
          else
            echo "status=pass" >> $GITHUB_OUTPUT
          fi
        if: ${{ steps.regex-match.outputs.match != '' }}

      - uses: actions/github-script@v7
        if: ${{ steps.check_jira.outputs.status == 'fail' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "${{ steps.regex-match.outputs.match }} is in Done status. Can't merge PR's for Done tickets"
            })
            process.exit(1)

      - run: echo hi
  run:
    runs-on: ubuntu-latest
    # if: ${{ github.event.action == 'edited' }}
    if: always() && !failure() && !cancelled()
    needs: [build]
    steps:
      - run: echo bye
